{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\AndroidStudioProjects\\\\Resto_Front\\\\src\\\\components\\\\map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport { useParams } from \"react-router-dom\";\nimport { Card } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customizeMap = {\n  width: \"50%\",\n  height: \"53%\"\n};\nconst infoContainerStyle = {\n  padding: \"16px\"\n};\nconst GoogleMapComponent = _ref => {\n  _s();\n  let {\n    google\n  } = _ref;\n  const [coords, setCoords] = useState([]);\n  const [initialCenter, setInitialCenter] = useState({\n    lat: 31.6665735,\n    lng: -7.9754785\n  });\n  const [restoInfo, setRestoInfo] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    axios.get(`/api/restaurants/${id}`).then(response => {\n      const data = response.data;\n\n      // Check if data has latitude and longitude properties\n      if (data.latitude && data.longitude) {\n        const coordinates = {\n          lat: data.longitude,\n          lng: data.latitude\n        };\n        setCoords([coordinates]);\n        setInitialCenter(coordinates);\n      } else {\n        // Handle the case when data does not have the expected properties\n        console.error(\"Invalid data structure:\", data);\n      }\n      setRestoInfo(data);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, [id]);\n  const drawMarker = () => {\n    return coords.map((coord, i) => {\n      const {\n        lat,\n        lng\n      } = coord;\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        id: i,\n        position: {\n          lat: lat,\n          lng: lng\n        },\n        onClick: () => console.log(\"Event Handler Called\")\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurant Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: 10,\n          marginRight: 10,\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          google: google,\n          style: customizeMap,\n          zoom: 10,\n          initialCenter: initialCenter,\n          children: drawMarker()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMapComponent, \"hATH1wKTn/Zxz+zSq0uz2hAhko8=\", false, function () {\n  return [useParams];\n});\n_c = GoogleMapComponent;\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCsA6hQ1C8D6IIeB_r2WDEEgPelvpUWIf8&amp;region=MA\"\n})(GoogleMapComponent);\nvar _c;\n$RefreshReg$(_c, \"GoogleMapComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","Map","Marker","GoogleApiWrapper","useParams","Card","jsxDEV","_jsxDEV","customizeMap","width","height","infoContainerStyle","padding","GoogleMapComponent","_ref","_s","google","coords","setCoords","initialCenter","setInitialCenter","lat","lng","restoInfo","setRestoInfo","id","get","then","response","data","latitude","longitude","coordinates","console","error","catch","drawMarker","map","coord","i","position","onClick","log","fileName","_jsxFileName","lineNumber","columnNumber","children","style","display","marginLeft","marginRight","flex","zoom","_c","apiKey","$RefreshReg$"],"sources":["C:/Users/hp/AndroidStudioProjects/Resto_Front/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card } from \"antd\";\r\n\r\nconst customizeMap = {\r\n  width: \"50%\",\r\n  height: \"53%\",\r\n};\r\n\r\nconst infoContainerStyle = {\r\n  padding: \"16px\",\r\n};\r\n\r\nconst GoogleMapComponent = ({ google }) => {\r\n  const [coords, setCoords] = useState([]);\r\n  const [initialCenter, setInitialCenter] = useState({\r\n    lat: 31.6665735,\r\n    lng: -7.9754785,\r\n  });\r\n  const [restoInfo, setRestoInfo] = useState(null);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/restaurants/${id}`)\r\n      .then((response) => {\r\n        const data = response.data;\r\n\r\n        // Check if data has latitude and longitude properties\r\n        if (data.latitude && data.longitude) {\r\n          const coordinates = {\r\n            lat: data.longitude,\r\n            lng: data.latitude,\r\n          };\r\n          setCoords([coordinates]);\r\n          setInitialCenter(coordinates);\r\n\r\n        } else {\r\n          // Handle the case when data does not have the expected properties\r\n          console.error(\"Invalid data structure:\", data);\r\n        }\r\n\r\n        setRestoInfo(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, [id]);\r\n\r\n  const drawMarker = () => {\r\n    return coords.map((coord, i) => {\r\n      const { lat, lng } = coord;\r\n\r\n      return (\r\n        <Marker\r\n          key={i}\r\n          id={i}\r\n          position={{\r\n            lat: lat,\r\n            lng: lng,\r\n          }}\r\n          onClick={() => console.log(\"Event Handler Called\")}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Restaurant Details</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ marginLeft: 10, marginRight: 10, flex: 1 }}>\r\n          <Map\r\n            google={google}\r\n            style={customizeMap}\r\n            zoom={10}\r\n            initialCenter={initialCenter}\r\n          >\r\n            {drawMarker()}\r\n          </Map>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyCsA6hQ1C8D6IIeB_r2WDEEgPelvpUWIf8&amp;region=MA\",\r\n})(GoogleMapComponent);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}